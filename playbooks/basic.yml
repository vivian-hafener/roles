---
- hosts: all
  become: yes
  tasks:
    - name: Install basic packages
      package:
        name: "{{ item }}"
        state: present
      loop: "{{ group_vars.all.packages }}"

- name: Install packages based on group
  hosts: laptop
  become: yes
  tasks:
    - name: Install packages for the group
      package:
        name: "{{ item }}"
        state: present
      loop: "{{ group_vars.laptop.packages }}"


- name: Install packages based on group
  hosts: python-devel
  become: yes
  tasks:
    - name: Install packages for the group
      package:
        name: "{{ item }}"
        state: present
      loop: "{{ group_vars.pythondevel.packages }}"

- name: Create folders for development hosts
  hosts: pythondevel
  tasks:
    - name: Create repos dir
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/repos"
        state: directory
        mode: '0755'
    - name: Clone repos
      git:
        repo: "{{ item }}"
        dest: "{{ ansible_env.HOME }}/repos/"
        clone: yes
        update: yes
      loop: "{{ group_vars.pythondevelrepos }}"

- name: Set up i3
  hosts: i3wm
  tasks:
    - name: Create repos dir
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/repos"
        state: directory
        mode: '0755'
    - name: Clone repos
      git:
        repo: "{{ item }}"
        dest: "{{ ansible_env.HOME }}/repos/"
        clone: yes
        update: yes
      loop: "{{ group_vars.i3wm.repos }}"
    - name: Make subfolders for configurations requiring them
      ansible.builtin.file:
        path: "{{ ansible_env.HOME }}/.config/{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "polybar"
    - name: Build out hard links for dotfiles
      ansible.builtin.file:
        src: "{{ ansible_env.HOME }}/repos/dotfiles/{{ item.src }}"
        dest: "{{ ansible_env.HOME }}/.config/{{ item.dest }}"
        state: hard
      loop:
        - { src: "i3", dest: "i3"}
        - { src: "alacritty.yml", dest: "alacritty.yml"}
        - { src: "polybar.ini", dest: "polybar/config.ini"}
    - name: Kick i3
      become: yes
      become_user: "{{ user }}"
      command:
        cmd: "i3-msg restart"


- name: Configure shell environment
  hosts: all
  tasks:
    - name: Install Oh My ZSH
      become: yes
      become_user: "{{ user }}"
      ansible.builtin.command:
        cmd: 'sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"'
    - name: Change user shell to ZSH
      become: yes
      become_user: "{{ user }}"
      ansible.builtin.command:
        cmd: 'chsh -s $(which zsh)'

